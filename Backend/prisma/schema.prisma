generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RequestStatus {
  DISPATCH
  READY
  IN_PROGRESS
  ACKNOWLEDGED
  PENDING
}

enum CardScheme {
  VERVE
  MASTERCARD
  VISA
}

enum Currency {
  NGN
  USD
}

enum FeeFrequency {
  ONE_OFF
  MONTHLY
}

enum FeeImpact {
  ISSUANCE
  PIN_REISSUE
}

enum AccountPad {
  NONE
  BRANCH_CODE_PREFIX
  BRANCH_CODE_SUFFIX
}

model CardRequest {
  id            String        @id @default(uuid())
  branchName    String        @db.VarChar(255)
  cardType      String        @db.VarChar(255)
  quantity      Int
  dateRequested DateTime      @default(now())
  initiator     String        @db.VarChar(255)
  cardCharges   Float
  batch         String        @unique() @db.VarChar(255)
  status        RequestStatus @default(PENDING)

  @@index([status])
  @@index([branchName])
  @@index([batch])
  @@map("cardrequests")
}

model CardProfile {
  id              String     @id @default(uuid())
  cardName        String     @db.VarChar(255)
  cardScheme      CardScheme
  description     String?
  branchBlacklist String?
  binPrefix       String     @unique
  expiration      Int
  currency        Currency
  createdAt       DateTime   @default(now())

  fees Fee[]
}

model Fee {
  id            String       @id @default(uuid())
  name          String       @db.VarChar(255)
  value         Float
  currency      Currency
  frequency     FeeFrequency
  feeImpact     FeeImpact?
  accountPad    AccountPad
  account       String?
  cardProfileId String
  cardProfile   CardProfile  @relation(fields: [cardProfileId], references: [id], onDelete: Cascade)

  @@index([cardProfileId])
}
